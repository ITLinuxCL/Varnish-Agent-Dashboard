// ==========================================================================
// Project:   Ember Data
// Copyright: ©2011-2012 Tilde Inc. and contributors.
//            Portions ©2011 Living Social Inc. and contributors.
// License:   Licensed under MIT license (see license.js)
// ==========================================================================



(function(){window.DS=Ember.Namespace.create({CURRENT_API_REVISION:10})})(),function(){var a=Ember.get,b=Ember.set;DS.RecordArray=Ember.ArrayProxy.extend(Ember.Evented,{type:null,content:null,isLoaded:!1,isUpdating:!1,store:null,objectAtContent:function(b){var c=a(this,"content"),d=c.objectAt(b),e=a(this,"store");if(d!==undefined)return e.findByClientId(a(this,"type"),d)},materializedObjectAt:function(b){var c=a(this,"content").objectAt(b);if(!c)return;if(a(this,"store").recordIsMaterialized(c))return this.objectAt(b)},update:function(){if(a(this,"isUpdating"))return;var b=a(this,"store"),c=a(this,"type");b.fetchAll(c,this)}})}(),function(){var a=Ember.get;DS.FilteredRecordArray=DS.RecordArray.extend({filterFunction:null,isLoaded:!0,replace:function(){var b=a(this,"type").toString();throw new Error("The result of a client-side filter (on "+b+") is immutable.")},updateFilter:Ember.observer(function(){var b=a(this,"store");b.updateRecordArrayFilter(this,a(this,"type"),a(this,"filterFunction"))},"filterFunction")})}(),function(){var a=Ember.get,b=Ember.set;DS.AdapterPopulatedRecordArray=DS.RecordArray.extend({query:null,replace:function(){var b=a(this,"type").toString();throw new Error("The result of a server query (on "+b+") is immutable.")},load:function(c){var d=a(this,"store"),e=a(this,"type"),f=d.loadMany(e,c).clientIds;this.beginPropertyChanges(),b(this,"content",Ember.A(f)),b(this,"isLoaded",!0),this.endPropertyChanges(),this.trigger("didLoad")}})}(),function(){var a=Ember.get,b=Ember.set,c=Ember.guidFor,d=function(){this.hash={},this.list=[]};d.prototype={add:function(a){var b=this.hash,d=c(a);if(b.hasOwnProperty(d))return;b[d]=!0,this.list.push(a)},remove:function(a){var b=this.hash,d=c(a);if(!b.hasOwnProperty(d))return;delete b[d];var e=this.list,f=Ember.EnumerableUtils.indexOf(this,a);e.splice(f,1)},isEmpty:function(){return this.list.length===0}};var e=Ember.State.extend({recordWasAdded:function(b,c){var d=b.dirty,e;d.add(c),e=function(){a(c,"isDirty")||(c.removeObserver("isDirty",e),b.send("childWasSaved",c))},c.addObserver("isDirty",e)},recordWasRemoved:function(b,c){var d=b.dirty,e;d.add(c),e=function(){c.removeObserver("isDirty",e),a(c,"isDirty")||b.send("childWasSaved",c)},c.addObserver("isDirty",e)}}),f={loading:Ember.State.create({isLoaded:!1,isDirty:!1,loadedRecords:function(a,b){a.decrement(b)},becameLoaded:function(a){a.transitionTo("clean")}}),clean:e.createWithMixins({isLoaded:!0,isDirty:!1,recordWasAdded:function(a,b){this._super(a,b),a.goToState("dirty")},update:function(a,c){var d=a.manyArray;b(d,"content",c)}}),dirty:e.createWithMixins({isLoaded:!0,isDirty:!0,childWasSaved:function(a,b){var c=a.dirty;c.remove(b),c.isEmpty()&&a.send("arrayBecameSaved")},arrayBecameSaved:function(a){a.goToState("clean")}})};DS.ManyArrayStateManager=Ember.StateManager.extend({manyArray:null,initialState:"loading",states:f,counter:0,init:function(){this._super(),this.dirty=new d,this.counter=a(this,"manyArray.length")},decrement:function(a){var b=this.counter=this.counter-a;b===0&&this.send("becameLoaded")}})}(),function(){var a=Ember.get,b=Ember.set;DS.ManyArray=DS.RecordArray.extend({init:function(){this._super.apply(this,arguments),this._changesToSync=Ember.OrderedSet.create()},owner:null,isLoaded:!1,loadingRecordsCount:function(a){this.loadingRecordsCount=a},loadedRecord:function(){this.loadingRecordsCount--,this.loadingRecordsCount===0&&(b(this,"isLoaded",!0),this.trigger("didLoad"))},fetch:function(){var b=a(this,"content"),c=a(this,"store"),d=a(this,"type");c.fetchUnloadedClientIds(d,b)},replaceContent:function(a,b,c){c=c.map(function(a){return a.get("clientId")},this),this._super(a,b,c)},arrangedContentDidChange:function(){this.fetch()},arrayContentWillChange:function(b,c,d){var e=a(this,"owner"),f=a(this,"name");if(!e._suspendedAssociations)for(var g=b;g<b+c;g++){var h=a(this,"content").objectAt(g),i=DS.OneToManyChange.forChildAndParent(h,a(this,"store"),{parentType:e.constructor,hasManyName:f});i.hasManyName=f,i.oldParent===undefined&&(i.oldParent=a(e,"clientId")),i.newParent=null,this._changesToSync.add(i)}return this._super.apply(this,arguments)},arrayContentDidChange:function(b,c,d){this._super.apply(this,arguments);var e=a(this,"owner"),f=a(this,"name");if(!e._suspendedAssociations){for(var g=b;g<b+d;g++){var h=a(this,"content").objectAt(g),i=DS.OneToManyChange.forChildAndParent(h,a(this,"store"),{parentType:e.constructor,hasManyName:f});i.hasManyName=f,i.newParent=a(e,"clientId"),this._changesToSync.add(i)}this._changesToSync.forEach(function(a){a.sync()}),this._changesToSync.clear()}},createRecord:function(b,c){var d=a(this,"owner"),e=a(d,"store"),f=a(this,"type"),g;return c=c||a(d,"transaction"),g=e.createRecord.call(e,f,b,c),this.pushObject(g),g},removeFromContent:function(b){var c=a(b,"clientId");a(this,"content").removeObject(c)},addToContent:function(b){var c=a(b,"clientId");a(this,"content").addObject(c)}})}(),function(){}(),function(){var a=Ember.get,b=Ember.set,c=Ember.String.fmt,d=Ember.EnumerableUtils.removeObject,e=Ember.EnumerableUtils.forEach,f=function(){return[]};DS.Transaction=Ember.Object.extend({init:function(){b(this,"buckets",{clean:Ember.OrderedSet.create(),created:Ember.OrderedSet.create(),updated:Ember.OrderedSet.create(),deleted:Ember.OrderedSet.create(),inflight:Ember.OrderedSet.create()}),b(this,"relationships",Ember.OrderedSet.create())},createRecord:function(b,c){var d=a(this,"store");return d.createRecord(b,c,this)},isEqualOrDefault:function(b){if(this===b||b===a(this,"store.defaultTransaction"))return!0},isDefault:Ember.computed(function(){return this===a(this,"store.defaultTransaction")}),add:function(b){var c=a(b,"transaction"),d=a(this,"store.defaultTransaction");if(c===this)return;this.adoptRecord(b)},relationshipBecameDirty:function(b){a(this,"relationships").add(b)},relationshipBecameClean:function(b){a(this,"relationships").remove(b)},commit:function(){var d=a(this,"store"),e=a(d,"_adapter"),f=a(d,"defaultTransaction"),g=function(a){var b=a.copy();return b.forEach(function(a){a.send("willCommit")}),b},h=a(this,"relationships"),i={created:g(this.bucketForType("created")),updated:g(this.bucketForType("updated")),deleted:g(this.bucketForType("deleted")),relationships:h};this===f&&b(d,"defaultTransaction",d.transaction()),this.removeCleanRecords();if(!i.created.isEmpty()||!i.updated.isEmpty()||!i.deleted.isEmpty()||!h.isEmpty())if(e&&e.commit)e.commit(d,i);else throw c("Adapter is either null or does not implement `commit` method",this);h.forEach(function(a){a.destroy()})},rollback:function(){["created","updated","deleted","inflight"].forEach(function(a){var b=this.bucketForType(a);e(b,function(a){a.send("rollback")}),b.clear()},this),this.removeCleanRecords()},remove:function(b){var c=a(this,"store.defaultTransaction");c.adoptRecord(b)},removeCleanRecords:function(){var a=this.bucketForType("clean");a.forEach(function(a){this.remove(a)},this),a.clear()},bucketForType:function(b){var c=a(this,"buckets");return a(c,b)},adoptRecord:function(c){var d=a(c,"transaction");d&&d.removeFromBucket("clean",c),this.addToBucket("clean",c),b(c,"transaction",this)},addToBucket:function(a,b){this.bucketForType(a).add(b)},removeFromBucket:function(a,b){this.bucketForType(a).remove(b)},recordBecameDirty:function(a,b){this.removeFromBucket("clean",b),this.addToBucket(a,b)},recordBecameInFlight:function(a,b){this.removeFromBucket(a,b),this.addToBucket("inflight",b)},recordIsMoving:function(a,b){this.removeFromBucket(a,b),this.addToBucket("clean",b)},recordBecameClean:function(a,b){this.removeFromBucket(a,b),this.remove(b)}})}(),function(){var a=Ember.String.classify,b=Ember.get,c=function(a,b,c){return a},d=function(a,b){return a},e=function(a,b){return b};DS._Mappable=Ember.Mixin.create({createInstanceMapFor:function(a){var b=Ember.metaPath(this,["DS.Mappable"],!0);b.values=b.values||{};if(b.values[a])return b.values[a];var c=b.values[a]=new Ember.Map,d=this.constructor;while(d&&d!==DS.Store)this._copyMap(a,d,c),d=d.superclass;return b.values[a]=c,c},_copyMap:function(a,b,f){function i(g,h){var i=(b.transformMapKey||d)(g,h),j=(b.transformMapValue||e)(g,h),k=f.get(i),l=j;k&&(l=(this.constructor.resolveMapConflict||c)(k,l,a)),f.set(i,l)}var g=Ember.metaPath(b,["DS.Mappable"],!0),h=g[a];h&&h.forEach(i,this)}}),DS._Mappable.generateMapFunctionFor=function(a,b){return function(c,d){var e=Ember.metaPath(this,["DS.Mappable"],!0),f=e[a]||Ember.MapWithDefault.create({defaultValue:function(){return{}}});b.call(this,c,d,f),e[a]=f}}}(),function(){var a=Ember.get,b=Ember.set,c=Ember.String.fmt,d="unloaded",e="loading",f={materialized:!0},g={created:!0},h=function(a){return a+""},i=Ember.EnumerableUtils.map;DS.Store=Ember.Object.extend(DS._Mappable,{init:function(){var c=a(this,"revision");if(c!==DS.CURRENT_API_REVISION&&!Ember.ENV.TESTING)throw new Error("Error: The Ember Data library has had breaking API changes since the last time you updated the library. Please review the list of breaking changes at https://github.com/emberjs/data/blob/master/BREAKING_CHANGES.md, then update your store's `revision` property to "+DS.CURRENT_API_REVISION);(!a(DS,"defaultStore")||a(this,"isDefaultStore"))&&b(DS,"defaultStore",this),this.typeMaps={},this.recordCache=[],this.clientIdToId={},this.clientIdToType={},this.clientIdToData={},this.recordArraysByClientId={},this.relationshipChanges={},this.loadingRecordArrays={},b(this,"defaultTransaction",this.transaction())},transaction:function(){return DS.Transaction.create({store:this})},materializeData:function(b){var c=a(b,"clientId"),d=this.clientIdToData,e=this.adapterForType(b.constructor),h=d[c];d[c]=f,b.setupData(),h!==g&&e.materialize(b,h)},recordIsMaterialized:function(a){return!!this.recordCache[a]},adapter:"DS.Adapter",serialize:function(a,b){return this.adapterForType(a.constructor).serialize(a,b)},_adapter:Ember.computed(function(){var b=a(this,"adapter");return typeof b=="string"&&(b=a(this,b,!1)||a(Ember.lookup,b)),DS.Adapter.detect(b)&&(b=b.create()),b}).property("adapter"),clientIdCounter:1,createRecord:function(c,d,e){d=d||{};var f=c._create({store:this});e=e||a(this,"defaultTransaction"),e.adoptRecord(f);var i=d.id,j;Ember.none(i)&&(j=a(this,"adapter"),j&&j.generateIdForRecord&&(i=h(j.generateIdForRecord(this,f)),d.id=i)),i=h(i);var k=this.pushData(g,i,c);return b(f,"clientId",k),f.loadedData(),this.recordCache[k]=f,f.setProperties(d),f},deleteRecord:function(a){a.deleteRecord()},unloadRecord:function(a){a.unloadRecord()},find:function(a,b){return b===undefined?this.findAll(a):Ember.typeOf(b)==="object"?this.findQuery(a,b):this.findById(a,h(b))},findById:function(a,b){var c=this.typeMapFor(a).idToCid[b];if(c)return this.findByClientId(a,c);c=this.pushData(e,b,a);var d=this.materializeRecord(a,c,b),f=this.adapterForType(a);if(f&&f.find)f.find(this,a,b);else throw"Adapter is either null or does not implement `find` method";return d},findByClientId:function(a,b){var c,d,e;return d=this.recordCache[b],d||(e=this.clientIdToId[b],d=this.materializeRecord(a,b,e),c=this.clientIdToData,typeof c[b]=="object"&&d.loadedData()),d},neededClientIds:function(a,b){var c=[],f=this.clientIdToData,g;for(var h=0,i=b.length;h<i;h++)g=b[h],f[g]===d&&(c.push(g),f[g]=e);return c},fetchUnloadedClientIds:function(a,b){var c=this.neededClientIds(a,b);this.fetchMany(a,c)},fetchMany:function(a,b){var c=this.clientIdToId,d=i(b,function(a){return c[a]});if(!d.length)return;var e=this.adapterForType(a);if(e&&e.findMany)e.findMany(this,a,d);else throw"Adapter is either null or does not implement `findMany` method"},findMany:function(a,b,d,e){if(!Ember.isArray(b)){var f=this.adapterForType(a);if(f&&f.findAssociation)f.findAssociation(this,d,e,b);else throw c("Adapter is either null or does not implement `findMany` method",this);return this.createManyArray(a,Ember.A())}b=i(b,function(a){return h(a)});var g=this.clientIdsForIds(a,b),j=this.neededClientIds(a,g),k=this.createManyArray(a,Ember.A(g)),l=this.loadingRecordArrays,m,n,o;k.loadingRecordsCount(j.length);if(j.length){for(n=0,o=j.length;n<o;n++)m=j[n],l[m]?l[m].push(k):this.loadingRecordArrays[m]=[k];this.fetchMany(a,j)}else k.set("isLoaded",!0);return k},findQuery:function(a,b){var c=DS.AdapterPopulatedRecordArray.create({type:a,query:b,content:Ember.A([]),store:this}),d=this.adapterForType(a);if(d&&d.findQuery)d.findQuery(this,a,b,c);else throw"Adapter is either null or does not implement `findQuery` method";return c},findAll:function(a){var b=this.all(a);return this.fetchAll(a,b),b},fetchAll:function(a,c){var d=this.typeMapFor(a).sinceToken,e=this.adapterForType(a);b(c,"isUpdating",!0);if(e&&e.findAll)e.findAll(this,a,d);else throw"Adapter is either null or does not implement `findAll` method"},sinceForType:function(a,b){this.typeMapFor(a).sinceToken=b},didUpdateAll:function(a){var c=this.typeMapFor(a).findAllCache;b(c,"isUpdating",!1)},all:function(a){var b=this.typeMapFor(a),c=b.findAllCache;if(c)return c;var d=DS.RecordArray.create({type:a,content:Ember.A([]),store:this,isLoaded:!0});return this.registerRecordArray(d,a),b.findAllCache=d,d},filter:function(a,b,c){arguments.length===3?this.findQuery(a,b):arguments.length===2&&(c=b);var d=DS.FilteredRecordArray.create({type:a,content:Ember.A([]),store:this,filterFunction:c});return this.registerRecordArray(d,a,c),d},recordIsLoaded:function(a,b){return!Ember.none(this.typeMapFor(a).idToCid[b])},dataWasUpdated:function(b,c,d){if(a(d,"isDeleted"))return;var e=this.clientIdToData,f=e[c];typeof f=="object"&&this.updateRecordArrays(b,c)},commit:function(){a(this,"defaultTransaction").commit()},didSaveRecord:function(a,b){a.adapterDidCommit(),b?(this.updateId(a,b),this.updateRecordData(a,b)):this.didUpdateAttributes(a)},didSaveRecords:function(a,b){var c=0;a.forEach(function(a){this.didSaveRecord(a,b&&b[c++])},this)},recordWasInvalid:function(a,b){a.adapterDidInvalidate(b)},recordWasError:function(a){a.adapterDidError()},didUpdateAttribute:function(a,b,c){a.adapterDidUpdateAttribute(b,c)},didUpdateAttributes:function(a){a.eachAttribute(function(b){this.didUpdateAttribute(a,b)},this)},didUpdateRelationship:function(b,c){var d=this.relationshipChangeFor(a(b,"clientId"),c);d&&d.adapterDidUpdate()},materializeHasMany:function(a,b,c){a.materializeHasMany(b,c),a.adapterDidUpdateHasMany(b)},didUpdateRelationships:function(b){var c=this.relationshipChangesFor(a(b,"clientId"));for(var d in c){if(!c.hasOwnProperty(d))continue;c[d].adapterDidUpdate()}},didReceiveId:function(b,c){var d=this.typeMapFor(b.constructor),e=a(b,"clientId"),f=a(b,"id");d.idToCid[c]=e,this.clientIdToId[e]=c},updateRecordData:function(b,c){var d=a(b,"clientId"),e=this.clientIdToData;e[d]=c,b.didChangeData()},updateId:function(b,c){var d=this.typeMapFor(b.constructor),e=a(b,"clientId"),f=a(b,"id"),g=b.constructor,h=this.preprocessData(g,c);d.idToCid[h]=e,this.clientIdToId[e]=h},preprocessData:function(a,b){return this.adapterForType(a).extractEmbeddedData(this,a,b),this.adapterForType(a).extractId(a,b)},registerRecordArray:function(a,b,c){var d=this.typeMapFor(b).recordArrays;d.push(a),this.updateRecordArrayFilter(a,b,c)},createManyArray:function(a,b){var c=DS.ManyArray.create({type:a,content:b,store:this});return b.forEach(function(a){var b=this.recordArraysForClientId(a);b.add(c)},this),c},updateRecordArrayFilter:function(b,c,d){var e=this.typeMapFor(c),f=this.clientIdToData,g=e.clientIds,h,i,j,k;for(var l=0,m=g.length;l<m;l++)h=g[l],j=!1,i=f[h],typeof i=="object"&&((k=this.recordCache[h])?a(k,"isDeleted")||(j=!0):j=!0,j&&this.updateRecordArray(b,d,c,h))},updateRecordArrays:function(b,c){var d=this.typeMapFor(b).recordArrays,e;d.forEach(function(d){e=a(d,"filterFunction"),this.updateRecordArray(d,e,b,c)},this);var f=this.loadingRecordArrays[c];if(f){for(var g=0,h=f.length;g<h;g++)f[g].loadedRecord();this.loadingRecordArrays[c]=null}},updateRecordArray:function(b,c,d,e){var f,g;c?(g=this.findByClientId(d,e),f=c(g)):f=!0;var h=a(b,"content"),i=h.indexOf(e)!==-1,j=this.recordArraysForClientId(e);f&&!i?(j.add(b),h.pushObject(e)):!f&&i&&(j.remove(b),h.removeObject(e))},removeFromRecordArrays:function(b){var c=a(b,"clientId"),d=this.recordArraysForClientId(c);d.forEach(function(b){var d=a(b,"content");d.removeObject(c)})},recordArraysForClientId:function(b){var c=a(this,"recordArraysByClientId"),d=c[b];return d||(d=c[b]=Ember.OrderedSet.create()),d},typeMapFor:function(b){var c=a(this,"typeMaps"),d=Ember.guidFor(b),e=c[d];return e?e:c[d]={idToCid:{},clientIds:[],recordArrays:[]}},clientIdForId:function(a,b){b=h(b);var c=this.typeMapFor(a).idToCid[b];return c!==undefined?c:this.pushData(d,b,a)},clientIdsForIds:function(a,b){var c=this.typeMapFor(a),e=c.idToCid;return i(b,function(b){b=h(b);var c=e[b];return c?c:this.pushData(d,b,a)},this)},typeForClientId:function(a){return this.clientIdToType[a]},idForClientId:function(a){return this.clientIdToId[a]},load:function(a,b,c){if(c===undefined){c=b;var d=this.adapterForType(a);b=this.preprocessData(a,c)}b=h(b);var e=this.typeMapFor(a),f=this.clientIdToData,g=e.idToCid[b];if(g!==undefined){f[g]=c;var i=this.recordCache[g];i&&i.loadedData()}else g=this.pushData(c,b,a);return this.updateRecordArrays(a,g),{id:b,clientId:g}},loadMany:function(b,c,d){var e=Ember.A([]);if(d===undefined){d=c,c=[];var f=this.adapterForType(b);c=i(d,function(a){return this.preprocessData(b,a)},this)}for(var g=0,h=a(c,"length");g<h;g++){var j=this.load(b,c[g],d[g]);e.pushObject(j.clientId)}return{clientIds:e,ids:c}},pushData:function(a,b,c){var d=this.typeMapFor(c),e=d.idToCid,f=this.clientIdToId,g=this.clientIdToType,h=d.clientIds,i=this.clientIdToData,j=++this.clientIdCounter;return i[j]=a,g[j]=c,b&&(e[b]=j,f[j]=b),h.push(j),j},materializeRecord:function(c,d,e){var f;return this.recordCache[d]=f=c._create({store:this,clientId:d}),b(f,"id",e),a(this,"defaultTransaction").adoptRecord(f),f.loadingData(),f},dematerializeRecord:function(b){var c=a(b,"id"),d=a(b,"clientId"),e=this.typeForClientId(d),f=this.typeMapFor(e);b.updateRecordArrays(),delete this.recordCache[d],delete this.clientIdToId[d],delete this.clientIdToType[d],delete this.clientIdToData[d],delete this.recordArraysByClientId[d],c&&delete f.idToCid[c]},destroy:function(){return a(DS,"defaultStore")===this&&b(DS,"defaultStore",null),this._super()},addRelationshipChangeFor:function(a,b,c){var d=this.relationshipChanges;a in d||(d[a]={}),d[a][b]=c},removeRelationshipChangeFor:function(a,b){var c=this.relationshipChanges;if(a in c)delete c[a][b];else return},relationshipChangeFor:function(a,b){var c=this.relationshipChanges;if(a in c)return c[a][b];return},relationshipChangesFor:function(a){return this.relationshipChanges[a]},adapterForType:function(a){this._adaptersMap=this.createInstanceMapFor("adapters");var b=this._adaptersMap.get(a);return b?b:this.get("_adapter")},recordAttributeDidChange:function(a,b,c,d){var e=new Ember.OrderedSet,f=this.adapterForType(a.constructor);f.dirtyRecordsForAttributeChange&&f.dirtyRecordsForAttributeChange(e,a,b,c,d),e.forEach(function(a){a.adapterDidDirty()})},recordBelongsToDidChange:function(a,b,c){var d=this.adapterForType(b.constructor);d.dirtyRecordsForBelongsToChange&&d.dirtyRecordsForBelongsToChange(a,b,c)},recordHasManyDidChange:function(a,b,c){var d=this.adapterForType(b.constructor);d.dirtyRecordsForHasManyChange&&d.dirtyRecordsForHasManyChange(a,b,c)}}),DS.Store.reopenClass({registerAdapter:DS._Mappable.generateMapFunctionFor("adapters",function(a,b,c){c.set(a,b)}),transformMapKey:function(b){if(typeof b=="string"){var c;return c=a(Ember.lookup,b),c}return b},transformMapValue:function(a,b){return Ember.Object.detect(b)?b.create():b}})}(),function(){var a=Ember.get,b=Ember.set,c=Ember.guidFor,d=Ember.ArrayPolyfills.map,e=Ember.computed(function(b){var c=a(this,"parentState");if(c)return a(c,b)}).property(),f=function(a){for(var b in a)if(a.hasOwnProperty(b))return!1;return!0},g=function(a){for(var b in a)if(a.hasOwnProperty(b)&&a[b])return!0;return!1},h=function(b){var c=a(b,"record");c.materializeData()},i=function(b,c){var d=a(b,"record"),e=a(d,"store"),f=c.key,g=c.oldValue,h=c.value;e.recordAttributeDidChange(d,f,h,g)},j=function(a){var b=a.get("record");b.updateRecordArraysLater()};DS.State=Ember.State.extend({isLoaded:e,isDirty:e,isSaving:e,isDeleted:e,isError:e,isNew:e,isValid:e,dirtyType:e});var k=DS.State.extend({initialState:"uncommitted",isDirty:!0,uncommitted:DS.State.extend({enter:function(b){var c=a(this,"dirtyType"),d=a(b,"record");d.withTransaction(function(a){a.recordBecameDirty(c,d)})},setProperty:i,becomeDirty:Ember.K,willCommit:function(a){a.transitionTo("inFlight")},becameClean:function(b){var c=a(b,"record"),d=a(this,"dirtyType");c.withTransaction(function(a){a.recordBecameClean(d,c)}),b.transitionTo("loaded.saved")},becameInvalid:function(b){var c=a(this,"dirtyType"),d=a(b,"record");d.withTransaction(function(a){a.recordBecameInFlight(c,d)}),b.transitionTo("invalid")},rollback:function(b){a(b,"record").rollback()}}),inFlight:DS.State.extend({isSaving:!0,enter:function(b){var c=a(this,"dirtyType"),d=a(b,"record");d.becameInFlight(),d.withTransaction(function(a){a.recordBecameInFlight(c,d)})},didCommit:function(b){var c=a(this,"dirtyType"),d=a(b,"record");d.withTransaction(function(a){a.recordBecameClean("inflight",d)}),b.transitionTo("saved"),b.send("invokeLifecycleCallbacks",c)},becameInvalid:function(c,d){var e=a(c,"record");b(e,"errors",d),c.transitionTo("invalid"),c.send("invokeLifecycleCallbacks")},becameError:function(a){a.transitionTo("error"),a.send("invokeLifecycleCallbacks")}}),invalid:DS.State.extend({isValid:!1,exit:function(b){var c=a(b,"record");c.withTransaction(function(a){a.recordBecameClean("inflight",c)})},deleteRecord:function(b){b.transitionTo("deleted"),a(b,"record").clearRelationships()},setProperty:function(c,d){var e=a(c,"record"),f=a(e,"errors"),h=d.key;b(f,h,null),g(f)||c.send("becameValid"),i(c,d)},becomeDirty:Ember.K,rollback:function(a){a.send("becameValid"),a.send("rollback")},becameValid:function(a){a.transitionTo("uncommitted")},invokeLifecycleCallbacks:function(b){var c=a(b,"record");c.trigger("becameInvalid",c)}})}),l=k.create({dirtyType:"created",isNew:!0}),m=k.create({dirtyType:"updated"});l.states.uncommitted.reopen({deleteRecord:function(b){var c=a(b,"record");c.withTransaction(function(a){a.recordIsMoving("created",c)}),b.transitionTo("deleted.saved"),c.clearRelationships()}}),l.states.uncommitted.reopen({rollback:function(a){this._super(a),a.transitionTo("deleted.saved")}}),m.states.uncommitted.reopen({deleteRecord:function(b){var c=a(b,"record");c.withTransaction(function(a){a.recordIsMoving("updated",c)}),b.transitionTo("deleted"),a(b,"record").clearRelationships()}});var n={rootState:Ember.State.create({isLoaded:!1,isDirty:!1,isSaving:!1,isDeleted:!1,isError:!1,isNew:!1,isValid:!0,empty:DS.State.create({loadingData:function(a){a.transitionTo("loading")},loadedData:function(a){a.transitionTo("loaded.created")}}),loading:DS.State.create({exit:function(b){var c=a(b,"record");c.trigger("didLoad")},loadedData:function(a){h(a),a.transitionTo("loaded")}}),loaded:DS.State.create({initialState:"saved",isLoaded:!0,saved:DS.State.create({setProperty:i,didChangeData:h,loadedData:h,becomeDirty:function(a){a.transitionTo("updated")},deleteRecord:function(b){b.transitionTo("deleted"),a(b,"record").clearRelationships()},unloadRecord:function(b){b.transitionTo("deleted.saved"),a(b,"record").clearRelationships()},willCommit:function(a){a.transitionTo("relationshipsInFlight")},invokeLifecycleCallbacks:function(b,c){var d=a(b,"record");c==="created"?d.trigger("didCreate",d):d.trigger("didUpdate",d)}}),relationshipsInFlight:Ember.State.create({enter:function(b){var c=a(b,"record");c.withTransaction(function(a){a.recordBecameInFlight("clean",c)})},didCommit:function(b){var c=a(b,"record");c.withTransaction(function(a){a.recordBecameClean("inflight",c)}),b.transitionTo("saved"),b.send("invokeLifecycleCallbacks")}}),created:l,updated:m}),deleted:DS.State.create({initialState:"uncommitted",dirtyType:"deleted",isDeleted:!0,isLoaded:!0,isDirty:!0,setup:function(b){var c=a(b,"record"),d=a(c,"store");d.removeFromRecordArrays(c)},uncommitted:DS.State.create({enter:function(b){var c=a(b,"record");c.withTransaction(function(a){a.recordBecameDirty("deleted",c)})},willCommit:function(a){a.transitionTo("inFlight")},rollback:function(b){a(b,"record").rollback()},becomeDirty:Ember.K,becameClean:function(b){var c=a(b,"record");c.withTransaction(function(a){a.recordBecameClean("deleted",c)}),b.transitionTo("loaded.saved")}}),inFlight:DS.State.create({isSaving:!0,enter:function(b){var c=a(b,"record");c.becameInFlight(),c.withTransaction(function(a){a.recordBecameInFlight("deleted",c)})},didCommit:function(b){var c=a(b,"record");c.withTransaction(function(a){a.recordBecameClean("inflight",c)}),b.transitionTo("saved"),b.send("invokeLifecycleCallbacks")}}),saved:DS.State.create({isDirty:!1,setup:function(b){var c=a(b,"record"),d=a(c,"store");d.dematerializeRecord(c)},invokeLifecycleCallbacks:function(b){var c=a(b,"record");c.trigger("didDelete",c)}})}),error:DS.State.create({isError:!0,invokeLifecycleCallbacks:function(b){var c=a(b,"record");c.trigger("becameError",c)}})})};DS.StateManager=Ember.StateManager.extend({record:null,initialState:"rootState",states:n,unhandledEvent:function(b,c){var e=b.get("record"),f=[].slice.call(arguments,2),g;throw g="Attempted to handle event `"+c+"` ",g+="on "+e.toString()+" while in state ",g+=a(this,"currentState.path")+". Called with ",g+=d.call(f,function(a){return Ember.inspect(a)}).join(", "),new Ember.Error(g)}})}(),function(){var a=Ember.get,b=Ember.set,c=Ember.none,d=Ember.computed(function(b){return a(a(this,"stateManager.currentState"),b)}).property("stateManager.currentState");DS.Model=Ember.Object.extend(Ember.Evented,{isLoaded:d,isDirty:d,isSaving:d,isDeleted:d,isError:d,isNew:d,isValid:d,clientId:null,transaction:null,stateManager:null,errors:null,serialize:function(b){var c=a(this,"store");return c.serialize(this,b)},didLoad:Ember.K,didUpdate:Ember.K,didCreate:Ember.K,didDelete:Ember.K,becameInvalid:Ember.K,becameError:Ember.K,data:Ember.computed(function(){return this._data||this.materializeData(),this._data}).property(),materializeData:function(){this.setupData(),a(this,"store").materializeData(this),this.suspendAssociationObservers(function(){this.notifyPropertyChange("data")})},_data:null,init:function(){var a=DS.StateManager.create({record:this});b(this,"stateManager",a),this.setup(),a.goToState("empty")},setup:function(){this._relationshipChanges={}},send:function(b,c){return a(this,"stateManager").send(b,c)},withTransaction:function(b){var c=a(this,"transaction");c&&b(c)},loadingData:function(){this.send("loadingData")},loadedData:function(){this.send("loadedData")},didChangeData:function(){this.send("didChangeData")},setProperty:function(a,b,c){this.send("setProperty",{key:a,value:b,oldValue:c})},deleteRecord:function(){this.send("deleteRecord")},unloadRecord:function(){this.send("unloadRecord")},clearRelationships:function(){this.eachAssociation(function(c,d){d.kind==="belongsTo"?b(this,c,null):d.kind==="hasMany"&&a(this,c).clear()},this)},updateRecordArrays:function(){var b=a(this,"store");b&&b.dataWasUpdated(this.constructor,a(this,"clientId"),this)},adapterDidCommit:function(){var b=a(this,"data").attributes;a(this.constructor,"attributes").forEach(function(c,d){b[c]=a(this,c)},this),this.send("didCommit"),this.updateRecordArraysLater()},adapterDidDirty:function(){this.send("becomeDirty"),this.updateRecordArraysLater()},dataDidChange:Ember.observer(function(){var c=a(this.constructor,"associationsByName"),d=a(this,"data").hasMany,e=a(this,"store"),f=e.idToClientId,g;this.updateRecordArraysLater(),c.forEach(function(a,c){if(c.kind==="hasMany"){g=this.cacheFor(a);if(g){var f=a,h=d[f]||[],i;i=Ember.EnumerableUtils.map(h,function(a){return e.clientIdForId(c.type,a)}),b(g,"content",Ember.A(i))}}},this)},"data"),updateRecordArraysLater:function(){Ember.run.once(this,this.updateRecordArrays)},setupData:function(){this._data={attributes:{},belongsTo:{},hasMany:{},id:null}},materializeId:function(a){b(this,"id",a)},materializeAttributes:function(a){this._data.attributes=a},materializeAttribute:function(a,b){this._data.attributes[a]=b},materializeHasMany:function(a,b){this._data.hasMany[a]=b},materializeBelongsTo:function(a,b){this._data.belongsTo[a]=b},rollback:function(){this.setup(),this.send("becameClean"),this.suspendAssociationObservers(function(){this.notifyPropertyChange("data")})},toStringExtension:function(){return a(this,"id")},suspendAssociationObservers:function(b,c){var d=a(this.constructor,"associationNames").belongsTo,e=this;try{this._suspendedAssociations=!0,Ember._suspendObservers(e,d,null,"belongsToDidChange",function(){Ember._suspendBeforeObservers(e,d,null,"belongsToWillChange",function(){b.call(c||e)})})}finally{this._suspendedAssociations=!1}},becameInFlight:function(){},adapterDidUpdateAttribute:function(b,c){c!==undefined?(a(this,"data.attributes")[b]=c,this.notifyPropertyChange(b)):(c=a(this,b),a(this,"data.attributes")[b]=c),this.updateRecordArraysLater()},adapterDidUpdateHasMany:function(c){var d=this.cacheFor(c),e=a(this,"data").hasMany,f=a(this,"store"),g=a(this.constructor,"associationsByName"),h=g.get(c),i=f.idToClientId;if(d){var j=c,k=e[j]||[],l;l=Ember.EnumerableUtils.map(k,function(a){return f.clientIdForId(h.type,a)}),b(d,"content",Ember.A(l)),b(d,"isLoaded",!0)}this.updateRecordArraysLater()},adapterDidInvalidate:function(a){this.send("becameInvalid",a)},adapterDidError:function(){this.send("becameError")},trigger:function(a){Ember.tryInvoke(this,a,[].slice.call(arguments,1)),this._super.apply(this,arguments)}});var e=function(b){return function(){var c=a(DS,"defaultStore"),d=[].slice.call(arguments);return d.unshift(this),c[b].apply(c,d)}};DS.Model.reopenClass({isLoaded:e("recordIsLoaded"),find:e("find"),all:e("all"),filter:e("filter"),_create:DS.Model.create,create:function(){throw new Ember.Error("You should not call `create` on a model. Instead, call `createRecord` with the attributes you would like to set.")},createRecord:e("createRecord")})}(),function(){function b(b,c,d){var e=a(b,"data").attributes,f=e[d];return f===undefined&&(f=c.defaultValue),f}var a=Ember.get;DS.Model.reopenClass({attributes:Ember.computed(function(){var a=Ember.Map.create();return this.eachComputedProperty(function(b,c){c.isAttribute&&(c.name=b,a.set(b,c))}),a})}),DS.Model.reopen({eachAttribute:function(b,c){a(this.constructor,"attributes").forEach(function(a,d){b.call(c,a,d)},c)}}),DS.attr=function(c,d){d=d||{};var e={type:c,isAttribute:!0,options:d};return Ember.computed(function(c,e,f){var g;return arguments.length>1?(f=a(this,"data.attributes")[c],this.setProperty(c,e,f)):e=b(this,d,c),e}).property("data").meta(e)}}(),function(){}(),function(){var a=Ember.get,b=Ember.set,c=Ember.none;DS.belongsTo=function(b,c){c=c||{};var d={type:b,isAssociation:!0,options:c,kind:"belongsTo"};return Ember.computed(function(c,d){if(arguments.length===2)return d===undefined?null:d;var e=a(this,"data").belongsTo,f=a(this,"store"),g;return typeof b=="string"&&(b=a(this,b,!1)||a(Ember.lookup,b)),g=e[c],g?f.find(b,g):null}).property("data").meta(d)},DS.Model.reopen({belongsToWillChange:Ember.beforeObserver(function(b,c){if(a(b,"isLoaded")){var d=a(b,c),e=a(b,"clientId"),f=a(b,"store"),g=DS.OneToManyChange.forChildAndParent(e,f,{belongsToName:c});g.oldParent===undefined&&(g.oldParent=d?a(d,"clientId"):null)}}),belongsToDidChange:Ember.immediateObserver(function(b,c){if(a(b,"isLoaded")){var d=a(b,"store").relationshipChangeFor(a(b,"clientId"),c),e=a(b,c);d.newParent=e?a(e,"clientId"):null,d.sync()}})})}(),function(){var a=Ember.get,b=Ember.set,c=function(c,d){d=d||{};var e={type:c,isAssociation:!0,options:d,kind:"hasMany"};return Ember.computed(function(d,f){var g=a(this,"data").hasMany,h=a(this,"store"),i,j;return typeof c=="string"&&(c=a(this,c,!1)||a(Ember.lookup,c)),i=g[d],j=h.findMany(c,i||[],this,e),b(j,"owner",this),b(j,"name",d),j}).property().meta(e)};DS.hasMany=function(a,b){return c(a,b)}}(),function(){var a=Ember.get,b=Ember.set;DS.Model.reopen({didDefineProperty:function(a,b,c){if(c instanceof Ember.Descriptor){var d=c.meta();d.isAssociation&&d.kind==="belongsTo"&&(Ember.addObserver(a,b,null,"belongsToDidChange"),Ember.addBeforeObserver(a,b,null,"belongsToWillChange"))}}}),DS.Model.reopenClass({typeForAssociation:function(b){var c=a(this,"associationsByName").get(b);return c&&c.type},associations:Ember.computed(function(){var a=new Ember.MapWithDefault({defaultValue:function(){return[]}});return this.eachComputedProperty(function(b,c){if(c.isAssociation){typeof c.type=="string"&&(c.type=Ember.get(Ember.lookup,c.type));var d=a.get(c.type);d.
push({name:b,kind:c.kind})}}),a}),associationNames:Ember.computed(function(){var a={hasMany:[],belongsTo:[]};return this.eachComputedProperty(function(b,c){c.isAssociation&&a[c.kind].push(b)}),a}),associationsByName:Ember.computed(function(){var b=Ember.Map.create(),c;return this.eachComputedProperty(function(d,e){e.isAssociation&&(e.key=d,c=e.type,typeof c=="string"&&(c=a(this,c,!1)||a(Ember.lookup,c),e.type=c),b.set(d,e))}),b}),fields:Ember.computed(function(){var a=Ember.Map.create(),b;return this.eachComputedProperty(function(b,c){c.isAssociation?a.set(b,c.kind):c.isAttribute&&a.set(b,"attribute")}),a}),eachAssociation:function(b,c){a(this,"associationsByName").forEach(function(a,d){b.call(c,a,d)})}}),DS.Model.reopen({eachAssociation:function(a,b){this.constructor.eachAssociation(a,b)}}),DS._inverseNameFor=function(b,c,d){var e=a(b,"associations"),f=e.get(c),g,h,i;if(!f)return;for(var j=0,k=f.length;j<k;j++){g=f[j];if(g.kind===d){h=g;break}}if(h)return h.name},DS._inverseTypeFor=function(b,c){var d=a(b,"associationsByName"),e=d.get(c);if(e)return e.type}}(),function(){function c(a,b,c){var d=a.metaForProperty(c).options,e;return(e=d.inverse)?e:DS._inverseNameFor(b,a,"belongsTo")}function d(a,b,c){var d=b.metaForProperty(c).options,e;return(e=d.inverse)?e:DS._inverseNameFor(a,b,"hasMany")}var a=Ember.get,b=Ember.set;DS.OneToManyChange=function(a){this.oldParent=a.oldParent,this.child=a.child,this.belongsToName=a.belongsToName,this.store=a.store,this.committed={},this.awaiting=0},DS.OneToManyChange.create=function(a){return new DS.OneToManyChange(a)},DS.OneToManyChange.forChildAndParent=function(a,b,d){var e=b.typeForClientId(a),f;d.parentType?f=c(d.parentType,e,d.hasManyName):d.belongsToName&&(f=d.belongsToName);var g=b.relationshipChangeFor(a,f);return g||(g=DS.OneToManyChange.create({child:a,store:b}),b.addRelationshipChangeFor(a,f,g)),g.belongsToName=f,g},DS.OneToManyChange.prototype={getChildTypeAndId:function(){return this.getTypeAndIdFor(this.child)},getOldParentTypeAndId:function(){return this.getTypeAndIdFor(this.oldParent)},getNewParentTypeAndId:function(){return this.getTypeAndIdFor(this.newParent)},getHasManyName:function(){var a=this.hasManyName,b=this.store,c;if(!a){c=this.oldParent||this.newParent;if(!c)return;var e=b.typeForClientId(this.child),f=DS._inverseTypeFor(e,this.belongsToName);a=d(f,e,this.belongsToName),this.hasManyName=a}return a},getBelongsToName:function(){var a=this.belongsToName,b=this.store,c;if(!a){c=this.oldParent||this.newParent;if(!c)return;var d=b.typeForClientId(this.child),e=b.typeForClientId(c);a=DS._inverseNameFor(d,e,"belongsTo",this.hasManyName),this.belongsToName=a}return a},getTypeAndIdFor:function(a){if(a){var b=this.store;return[b.typeForClientId(a),b.idForClientId(a)]}},destroy:function(){var a=this.child,b=this.getBelongsToName(),c=this.getHasManyName(),d=this.store,e,f,g,h,i;d.removeRelationshipChangeFor(a,b),(i=this.transaction)&&i.relationshipBecameClean(this)},getByClientId:function(a){var b=this.store;if(!a)return a;if(b.recordIsMaterialized(a))return b.findByClientId(null,a)},getChild:function(){return this.getByClientId(this.child)},getOldParent:function(){return this.getByClientId(this.oldParent)},getNewParent:function(){return this.getByClientId(this.newParent)},getLastParent:function(){return this.getByClientId(this.lastParent)},ensureSameTransaction:function(b,c,d,e,f){var g=Ember.A();b&&g.pushObject(a(b,"transaction")),c&&g.pushObject(a(c,"transaction")),d&&g.pushObject(a(d,"transaction"));var h=g.reduce(function(b,c){return!a(c,"isDefault")&&b===null?c:b},null);return h?(h.add(b),c&&h.add(c),d&&h.add(d)):h=g.objectAt(0),this.transaction=h,h},sync:function(){var c=this.oldParent,d=this.newParent,e=this.getHasManyName(),f=this.getBelongsToName(),g=this.getChild(),h,i;c===undefined?(h=a(g,f),h?this.oldParent=a(h,"clientId"):this.oldParent=null):h=this.getOldParent();if(c===d){var j=this.getLastParent();j&&j.suspendAssociationObservers(function(){a(j,e).removeObject(g)}),h&&a(h,e).addObject(g),b(g,f,h),this.destroy();return}i=this.getNewParent();var k=this.ensureSameTransaction(g,h,i,e,f);k.relationshipBecameDirty(this);var l=new Ember.OrderedSet;h&&h!==i&&(a(h,e).removeObject(g),a(h,"isLoaded")&&this.store.recordHasManyDidChange(l,h,this)),i&&(a(i,e).addObject(g),a(i,"isLoaded")&&this.store.recordHasManyDidChange(l,i,this)),g&&(a(g,f)!==i&&b(g,f,i),this.store.recordBelongsToDidChange(l,g,this)),l.forEach(function(a){a.adapterDidDirty()}),this.lastParent=d},adapterDidUpdate:function(){if(this.awaiting>0)return;var a=this.getBelongsToName(),b=this.getHasManyName(),c,d,e;this.destroy()},wait:function(){this.awaiting++},done:function(){this.awaiting--,this.awaiting===0&&this.adapterDidUpdate()}}}(),function(){}(),function(){var a=Ember.set;Ember.onLoad("Ember.Application",function(b){b.registerInjection({name:"store",before:"controllers",injection:function(b,c,d){if(!c)return;d==="Store"&&a(c,"store",b[d].create())}}),b.registerInjection({name:"giveStoreToControllers",after:["store","controllers"],injection:function(a,b,c){if(!b)return;if(/^[A-Z].*Controller$/.test(c)){var d=c.charAt(0).toLowerCase()+c.substr(1),e=b.get("store"),f=b.get(d);if(!f)return;f.set("store",e)}}})})}(),function(){var a=Ember.get,b=Ember.set;DS.Serializer=Ember.Object.extend({init:function(){this.mappings=Ember.Map.create()},serialize:function(b,c){c=c||{};var d=this.createSerializedForm(),e;return c.includeId&&(e=a(b,"id"))&&this._addId(d,b.constructor,e),this.addAttributes(d,b),this.addRelationships(d,b),d},serializeValue:function(a,b){var c=this.transforms?this.transforms[b]:null;return c.serialize(a)},serializeId:function(a){return isNaN(a)?a:+a},addAttributes:function(a,b){b.eachAttribute(function(c,d){this._addAttribute(a,b,c,d.type)},this)},addAttribute:Ember.K,addId:Ember.K,addRelationships:function(a,b){b.eachAssociation(function(c,d){d.kind==="belongsTo"?this._addBelongsTo(a,b,c,d):d.kind==="hasMany"&&this._addHasMany(a,b,c,d)},this)},addBelongsTo:Ember.K,addHasMany:Ember.K,keyForAttributeName:function(a,b){return b},primaryKey:function(a){return"id"},keyForBelongsTo:function(a,b){return this.keyForAttributeName(a,b)},keyForHasMany:function(a,b){return this.keyForAttributeName(a,b)},materialize:function(b,c){Ember.none(a(b,"id"))&&b.materializeId(this.extractId(b.constructor,c)),this.materializeAttributes(b,c),this.materializeRelationships(b,c)},deserializeValue:function(a,b){var c=this.transforms?this.transforms[b]:null;return c.deserialize(a)},materializeAttributes:function(a,b){a.eachAttribute(function(c,d){this.materializeAttribute(a,b,c,d.type)},this)},materializeAttribute:function(a,b,c,d){var e=this.extractAttribute(a.constructor,b,c);e=this.deserializeValue(e,d),a.materializeAttribute(c,e)},materializeRelationships:function(a,b){a.eachAssociation(function(c,d){d.kind==="hasMany"?this.materializeHasMany(c,a,b,d):d.kind==="belongsTo"&&this.materializeBelongsTo(c,a,b,d)},this)},materializeHasMany:function(a,b,c,d){var e=this._keyForHasMany(b.constructor,d.key);b.materializeHasMany(a,this.extractHasMany(b.constructor,c,e))},materializeBelongsTo:function(a,b,c,d){var e=this._keyForBelongsTo(b.constructor,d.key);b.materializeBelongsTo(a,this.extractBelongsTo(b.constructor,c,e))},_extractEmbeddedRelationship:function(a,b,c,d){var e=this["_keyFor"+d](a,c),f=this.mappingForType(a),g=f&&f[c];if(g&&g.embedded==="load")return this["extractEmbedded"+d](a,b,e)},_extractEmbeddedBelongsTo:function(a,b,c){return this._extractEmbeddedRelationship(a,b,c,"BelongsTo")},_extractEmbeddedHasMany:function(a,b,c){return this._extractEmbeddedRelationship(a,b,c,"HasMany")},extractEmbeddedBelongsTo:function(a,b,c){return this.extractBelongsTo(a,b,c)},extractEmbeddedHasMany:function(a,b,c){return this.extractHasMany(a,b,c)},_primaryKey:function(a){var b=this.mappingForType(a),c=b&&b.primaryKey;return c?c:this.primaryKey(a)},_addAttribute:function(b,c,d,e){var f=this._keyForAttributeName(c.constructor,d),g=a(c,d);this.addAttribute(b,f,this.serializeValue(g,e))},_addId:function(a,b,c){var d=this._primaryKey(b);this.addId(a,d,this.serializeId(c))},_keyForAttributeName:function(a,b){return this._keyFromMappingOrHook("keyForAttributeName",a,b)},_keyForBelongsTo:function(a,b){return this._keyFromMappingOrHook("keyForBelongsTo",a,b)},_keyForHasMany:function(a,b){return this._keyFromMappingOrHook("keyForHasMany",a,b)},_addBelongsTo:function(a,b,c,d){var e=this._keyForBelongsTo(b.constructor,c);this.addBelongsTo(a,b,e,d)},_addHasMany:function(a,b,c,d){var e=this._keyForHasMany(b.constructor,c);this.addHasMany(a,b,e,d)},_keyFromMappingOrHook:function(a,b,c){var d=this.mappingForType(b),e=d&&d[c],f=e&&e.key;return f?f:this[a](b,c)},registerTransform:function(a,b){this.transforms[a]=b},map:function(a,b){this.mappings.set(a,b)},mappingForType:function(a){return this._reifyMappings(),this.mappings.get(a)},_reifyMappings:function(){if(this._didReifyMappings)return;var a=this.mappings,b=Ember.Map.create();a.forEach(function(a,c){if(typeof a=="string"){var d=Ember.get(Ember.lookup,a);b.set(d,c)}else b.set(a,c)}),this.mappings=b,this._didReifyMappings=!0}})}(),function(){DS.JSONTransforms={string:{deserialize:function(a){return Ember.none(a)?null:String(a)},serialize:function(a){return Ember.none(a)?null:String(a)}},number:{deserialize:function(a){return Ember.none(a)?null:Number(a)},serialize:function(a){return Ember.none(a)?null:Number(a)}},"boolean":{deserialize:function(a){var b=typeof a;return b==="boolean"?a:b==="string"?a.match(/^true$|^t$|^1$/i)!==null:b==="number"?a===1:!1},serialize:function(a){return Boolean(a)}},date:{deserialize:function(a){var b=typeof a;return b==="string"||b==="number"?(b==="string"&&a.search(/^\d{4}-\d{2}-\d{2}$/)!==-1&&(a+="T00:00:00Z"),new Date(a)):a===null||a===undefined?a:null},serialize:function(a){if(a instanceof Date){var b=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],c=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],d=function(a){return a<10?"0"+a:""+a},e=a.getUTCFullYear(),f=a.getUTCMonth(),g=a.getUTCDate(),h=a.getUTCDay(),i=a.getUTCHours(),j=a.getUTCMinutes(),k=a.getUTCSeconds(),l=b[h],m=d(g),n=c[f];return l+", "+m+" "+n+" "+e+" "+d(i)+":"+d(j)+":"+d(k)+" GMT"}return a===undefined?undefined:null}}}}(),function(){var a=Ember.get,b=Ember.set;DS.JSONSerializer=DS.Serializer.extend({init:function(){this._super(),a(this,"transforms")||this.set("transforms",DS.JSONTransforms)},addId:function(a,b,c){a[b]=c},addAttribute:function(a,b,c){a[b]=c},createSerializedForm:function(){return{}},extractAttribute:function(a,b,c){var d=this._keyForAttributeName(a,c);return b[d]},extractId:function(a,b){var c=this._primaryKey(a);return b[c]+""},extractHasMany:function(a,b,c){return b[c]},extractBelongsTo:function(a,b,c){return b[c]},replaceEmbeddedBelongsTo:function(a,b,c,d){b[this._keyForBelongsTo(a,c)]=d},replaceEmbeddedHasMany:function(a,b,c,d){b[this._keyForHasMany(a,c)]=d}})}(),function(){var a=Ember.get,b=Ember.set;DS.Adapter=Ember.Object.extend(DS._Mappable,{init:function(){var c=a(this,"serializer");Ember.Object.detect(c)&&(c=c.create(),b(this,"serializer",c)),this._attributesMap=this.createInstanceMapFor("attributes"),this._outstandingOperations=new Ember.MapWithDefault({defaultValue:function(){return 0}}),this._dependencies=new Ember.MapWithDefault({defaultValue:function(){return new Ember.OrderedSet}}),this.registerSerializerTransforms(this.constructor,c,{}),this.registerSerializerMappings(c)},dirtyRecordsForAttributeChange:function(a,b,c,d,e){d!==e&&a.add(b)},dirtyRecordsForBelongsToChange:function(a,b){a.add(b)},dirtyRecordsForHasManyChange:function(a,b){a.add(b)},registerSerializerTransforms:function(a,b,c){var d=a._registeredTransforms,e,f;for(f in d){if(!d.hasOwnProperty(f)||f in c)continue;c[f]=!0,b.registerTransform(f,d[f])}(e=a.superclass)&&this.registerSerializerTransforms(e,b,c)},registerSerializerMappings:function(a){var b=this._attributesMap;b.forEach(function(b,c){a.map(b,c)},this)},find:null,serializer:DS.JSONSerializer,registerTransform:function(b,c){a(this,"serializer").registerTransform(b,c)},generateIdForRecord:null,materialize:function(b,c){a(this,"serializer").materialize(b,c)},serialize:function(b,c){return a(this,"serializer").serialize(b,c)},extractId:function(b,c){return a(this,"serializer").extractId(b,c)},extractEmbeddedData:function(b,c,d){var e=a(this,"serializer");c.eachAssociation(function(a,f){var g,h,i;f.kind==="hasMany"?this._extractEmbeddedHasMany(b,e,c,d,f):f.kind==="belongsTo"&&this._extractEmbeddedBelongsTo(b,e,c,d,f)},this)},_extractEmbeddedHasMany:function(a,b,c,d,e){var f=b._extractEmbeddedHasMany(c,d,e.key),g=e.type;if(f){var h=[];for(var i=0,j=f.length;i<j;i++){var k=f[i];h.push(a.adapterForType(g).extractId(g,k))}b.replaceEmbeddedHasMany(c,d,e.key,h),a.loadMany(e.type,f)}},_extractEmbeddedBelongsTo:function(a,b,c,d,e){var f=b._extractEmbeddedBelongsTo(c,d,e.key),g=e.type;if(f){var h=a.adapterForType(g).extractId(g,f);b.replaceEmbeddedBelongsTo(c,d,e.key,h),a.load(e.type,f)}},groupByType:function(a){var b=Ember.MapWithDefault.create({defaultValue:function(){return Ember.OrderedSet.create()}});return a.forEach(function(a){b.get(a.constructor).add(a)}),b},processRelationship:function(a){},commit:function(a,b){this.save(a,b)},save:function(a,b){this.groupByType(b.created).forEach(function(b,c){this.createRecords(a,b,c.copy())},this),this.groupByType(b.updated).forEach(function(b,c){this.updateRecords(a,b,c.copy())},this),this.groupByType(b.deleted).forEach(function(b,c){this.deleteRecords(a,b,c.copy())},this)},createRecords:function(a,b,c){c.forEach(function(c){this.createRecord(a,b,c)},this)},updateRecords:function(a,b,c){c.forEach(function(c){this.updateRecord(a,b,c)},this)},deleteRecords:function(a,b,c){c.forEach(function(c){this.deleteRecord(a,b,c)},this)},findMany:function(a,b,c){c.forEach(function(c){this.find(a,b,c)},this)}}),DS.Adapter.reopenClass({registerTransform:function(a,b){var c=this._registeredTransforms||{};c[a]=b,this._registeredTransforms=c},map:DS._Mappable.generateMapFunctionFor("attributes",function(a,b,c){var d=c.get(a);for(var e in b){if(!b.hasOwnProperty(e))continue;d[e]=b[e]}}),resolveMapConflict:function(a,b,c){for(var d in a){if(!a.hasOwnProperty(d))continue;b[d]=a[d]}return b}})}(),function(){var a=Ember.get;DS.FixtureAdapter=DS.Adapter.extend({simulateRemoteResponse:!0,latency:50,fixturesForType:function(a){return a.FIXTURES?Ember.A(a.FIXTURES):null},queryFixtures:function(a,b){return a},mockJSON:function(a,b){return this.serialize(b,{includeId:!0})},generateIdForRecord:function(a,b){return Ember.guidFor(b)},find:function(a,b,c){var d=this.fixturesForType(b);d&&(d=d.findProperty("id",c)),d&&this.simulateRemoteCall(function(){a.load(b,d)},a,b)},findMany:function(a,b,c){var d=this.fixturesForType(b);d&&(d=d.filter(function(a){return c.indexOf(a.id)!==-1})),d&&this.simulateRemoteCall(function(){a.loadMany(b,d)},a,b)},findAll:function(a,b){var c=this.fixturesForType(b);this.simulateRemoteCall(function(){a.loadMany(b,c),a.didUpdateAll(b)},a,b)},findQuery:function(a,b,c,d){var e=this.fixturesForType(b);e=this.queryFixtures(e,c),e&&this.simulateRemoteCall(function(){d.load(e)},a,b)},createRecord:function(a,b,c){var d=this.mockJSON(b,c);d.id=this.generateIdForRecord(a,c),this.simulateRemoteCall(function(){a.didSaveRecord(c,d)},a,b,c)},updateRecord:function(a,b,c){var d=this.mockJSON(b,c);this.simulateRemoteCall(function(){a.didSaveRecord(c,d)},a,b,c)},deleteRecord:function(a,b,c){this.simulateRemoteCall(function(){a.didSaveRecord(c)},a,b,c)},simulateRemoteCall:function(b,c,d,e){a(this,"simulateRemoteResponse")?setTimeout(b,a(this,"latency")):b()}}),DS.fixtureAdapter=DS.FixtureAdapter.create()}(),function(){var a=Ember.get;DS.RESTSerializer=DS.JSONSerializer.extend({keyForBelongsTo:function(a,b){return this.keyForAttributeName(a,b)+"_id"},keyForAttributeName:function(a,b){return Ember.String.decamelize(b)},addBelongsTo:function(b,c,d,e){var f=a(c,e.key+".id");Ember.none(f)||(b[d]=f)}})}(),function(){var a=Ember.get,b=Ember.set;DS.RESTAdapter=DS.Adapter.extend({bulkCommit:!1,serializer:DS.RESTSerializer,createRecord:function(a,b,c){var d=this.rootForType(b),e={};e[d]=this.serialize(c,{includeId:!0}),this.ajax(this.buildURL(d),"POST",{data:e,context:this,success:function(d){this.didCreateRecord(a,b,c,d)},error:function(d){this.didError(a,b,c,d)}})},dirtyRecordsForHasManyChange:Ember.K,didSaveRecord:function(a,b,c){b.eachAssociation(function(c,d){d.kind==="belongsTo"&&a.didUpdateRelationship(b,c)}),a.didSaveRecord(b,c)},didSaveRecords:function(a,b,c){var d=0;b.forEach(function(b){this.didSaveRecord(a,b,c&&c[d++])},this)},didCreateRecord:function(a,b,c,d){var e=this.rootForType(b);this.sideload(a,b,d,e),this.didSaveRecord(a,c,d[e])},createRecords:function(b,c,d){if(a(this,"bulkCommit")===!1)return this._super(b,c,d);var e=this.rootForType(c),f=this.pluralize(e),g={};g[f]=[],d.forEach(function(a){g[f].push(this.serialize(a,{includeId:!0}))},this),this.ajax(this.buildURL(e),"POST",{data:g,context:this,success:function(a){this.didCreateRecords(b,c,d,a)}})},didCreateRecords:function(a,b,c,d){var e=this.pluralize(this.rootForType(b));this.sideload(a,b,d,e),this.didSaveRecords(a,c,d[e])},updateRecord:function(b,c,d){var e=a(d,"id"),f=this.rootForType(c),g={};g[f]=this.serialize(d),this.ajax(this.buildURL(f,e),"PUT",{data:g,context:this,success:function(a){this.didUpdateRecord(b,c,d,a)},error:function(a){this.didError(b,c,d,a)}})},didUpdateRecord:function(a,b,c,d){var e=this.rootForType(b);this.sideload(a,b,d,e),this.didSaveRecord(a,c,d&&d[e])},updateRecords:function(b,c,d){if(a(this,"bulkCommit")===!1)return this._super(b,c,d);var e=this.rootForType(c),f=this.pluralize(e),g={};g[f]=[],d.forEach(function(a){g[f].push(this.serialize(a,{includeId:!0}))},this),this.ajax(this.buildURL(e,"bulk"),"PUT",{data:g,context:this,success:function(a){this.didUpdateRecords(b,c,d,a)}})},didUpdateRecords:function(a,b,c,d){var e=this.pluralize(this.rootForType(b));this.sideload(a,b,d,e),this.didSaveRecords(a,c,d[e])},deleteRecord:function(b,c,d){var e=a(d,"id"),f=this.rootForType(c);this.ajax(this.buildURL(f,e),"DELETE",{context:this,success:function(a){this.didDeleteRecord(b,c,d,a)}})},didDeleteRecord:function(a,b,c,d){d&&this.sideload(a,b,d),this.didSaveRecord(a,c)},deleteRecords:function(b,c,d){if(a(this,"bulkCommit")===!1)return this._super(b,c,d);var e=this.rootForType(c),f=this.pluralize(e),g=a(this,"serializer"),h={};h[f]=[],d.forEach(function(b){h[f].push(g.serializeId(a(b,"id")))}),this.ajax(this.buildURL(e,"bulk"),"DELETE",{data:h,context:this,success:function(a){this.didDeleteRecords(b,c,d,a)}})},didDeleteRecords:function(a,b,c,d){d&&this.sideload(a,b,d),this.didSaveRecords(a,c)},find:function(a,b,c){var d=this.rootForType(b);this.ajax(this.buildURL(d,c),"GET",{success:function(d){this.didFindRecord(a,b,d,c)}})},didFindRecord:function(a,b,c,d){var e=this.rootForType(b);this.sideload(a,b,c,e),a.load(b,d,c[e])},findAll:function(a,b,c){var d=this.rootForType(b);this.ajax(this.buildURL(d),"GET",{data:this.sinceQuery(c),success:function(c){this.didFindAll(a,b,c)}})},didFindAll:function(a,b,c){var d=this.pluralize(this.rootForType(b)),e=this.extractSince(c);this.sideload(a,b,c,d),a.loadMany(b,c[d]),e&&a.sinceForType(b,e),a.didUpdateAll(b)},findQuery:function(a,b,c,d){var e=this.rootForType(b);this.ajax(this.buildURL(e),"GET",{data:c,success:function(c){this.didFindQuery(a,b,c,d)}})},didFindQuery:function(a,b,c,d){var e=this.pluralize(this.rootForType(b));this.sideload(a,b,c,e),d.load(c[e])},findMany:function(a,b,c){var d=this.rootForType(b);c=this.serializeIds(c),this.ajax(this.buildURL(d),"GET",{data:{ids:c},success:function(c){this.didFindMany(a,b,c)}})},serializeIds:function(b){var c=a(this,"serializer");return Ember.EnumerableUtils.map(b,function(a){return c.serializeId(a)})},didFindMany:function(a,b,c){var d=this.pluralize(this.rootForType(b));this.sideload(a,b,c,d),a.loadMany(b,c[d])},didError:function(a,b,c,d){if(d.status===422){var e=JSON.parse(d.responseText);a.recordWasInvalid(c,e.errors)}else a.recordWasError(c)},plurals:{},pluralize:function(a){return this.plurals[a]||a+"s"},rootForType:function(a){if(a.url)return a.url;var b=a.toString().split("."),c=b[b.length-1];return c.replace(/([A-Z])/g,"_$1").toLowerCase().slice(1)},ajax:function(a,b,c){c.url=a,c.type=b,c.dataType="json",c.contentType="application/json; charset=utf-8",c.context=this,c.data&&b!=="GET"&&(c.data=JSON.stringify(c.data)),jQuery.ajax(c)},sideload:function(b,c,d,e){var f,g,h={};h[e]=!0;for(var i in d){if(!d.hasOwnProperty(i))continue;if(i===e)continue;if(i===a(this,"meta"))continue;f=c.typeForAssociation(i),f||(g=a(this,"mappings"),f=a(g,i),typeof f=="string"&&(f=a(window,f))),this.sideloadAssociations(b,f,d,i,h)}},sideloadAssociations:function(b,c,d,e,f){f[e]=!0,a(c,"associationsByName").forEach(function(a,c){a=c.key||a,c.kind==="belongsTo"&&(a=this.pluralize(a)),d[a]&&!f[a]&&this.sideloadAssociations(b,c.type,d,a,f)},this),this.loadValue(b,c,d[e])},loadValue:function(a,b,c){c instanceof Array?a.loadMany(b,c):a.load(b,c)},url:"",buildURL:function(a,b){var c=[this.url];return this.namespace!==undefined&&c.push(this.namespace),c.push(this.pluralize(a)),b!==undefined&&c.push(b),c.join("/")},meta:"meta",since:"since",sinceQuery:function(b){var c={};return c[a(this,"since")]=b,b?c:null},extractSince:function(b){var c=this.extractMeta(b);return c[a(this,"since")]||null},extractMeta:function(b){return b[a(this,"meta")]||{}}})}(),function(){}(),function(){}()